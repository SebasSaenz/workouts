---
title: "TidyTuesday 2023/01 - Workouts data"
author: "Johan S. Sáenz"
date: "2023-01-06"
output:
  html_document:
  theme: paper
highlight: kate
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 2
    dpi: 600
execute:
  freeze: auto
  echo: true
  fig-width: 5
  fig-height: 6
---

```{r}
#| label: prep
#| message: false
#| warning: false
library(XML)
library(tidyverse)
library(lubridate)
library(patchwork)
library(ggtext)
library(showtext)
library(here)
```

## Data

```{r}
#| label: data
#| message: false
#| warning: false
health_xml <- xmlParse(here::here("rawdata/apple_health_export/export.xml"))

health_df <- XML:::xmlAttrsToDataFrame(health_xml["//Record"], 
                                       stringsAsFactors = FALSE) %>%
  as_tibble() %>% mutate(value = as.numeric(value))

activity_df <- XML:::xmlAttrsToDataFrame(health_xml["//ActivitySummary"], 
                                         stringsAsFactors = FALSE) %>% 
  as_tibble()

workout_df <-  XML:::xmlAttrsToDataFrame(health_xml["//Workout"], 
                                         stringsAsFactors = FALSE) %>% 
  as_tibble() %>% 
  mutate(duration=as.numeric(duration))
```

## Wrangling data

```{r}
#| label: wrangling
#| message: false
#| warning: false
calories <- activity_df %>% 
  dplyr::mutate(dateComponents = lubridate::date(dateComponents),
                year = lubridate::year(dateComponents), 
                month = lubridate::month(dateComponents, label = TRUE), 
                day = lubridate::day(dateComponents),
                week = lubridate::week(ymd(dateComponents)),
                activeEnergyBurned = as.numeric(activeEnergyBurned),
                activeEnergyBurnedGoal = as.numeric(activeEnergyBurnedGoal)) %>% 
  dplyr::mutate(calories_goal = activeEnergyBurned >=activeEnergyBurnedGoal,
                exercise_goal =appleExerciseTime >=appleExerciseTimeGoal,
                stand_goal = appleStandHours >= appleStandHoursGoal) %>% 
  dplyr::filter(year==2022)

wk_type <- workout_df %>% 
  mutate(creationDate = str_remove(creationDate, " .*"),
         workoutActivityType= str_replace(workoutActivityType, "HKWorkoutActivityType", "")) %>% 
  dplyr::mutate(year = lubridate::year(creationDate), 
                month = lubridate::month(creationDate, label = TRUE), 
                day = lubridate::day(creationDate),
                week = lubridate::week(ymd(creationDate))) %>% 
  dplyr::filter(year==2022) %>% 
  full_join(activity_df, by=c("creationDate"="dateComponents")) %>% 
  dplyr::filter(year==2022) 

weight <- health_df %>%
  filter(type=="HKQuantityTypeIdentifierBodyMass") %>% 
  mutate(creationDate = str_remove(creationDate, " .*")) %>% 
  dplyr::mutate(year = lubridate::year(creationDate), 
                month = lubridate::month(creationDate, label = TRUE), 
                day = lubridate::day(creationDate),
                week = lubridate::week(ymd(creationDate))) %>% 
  filter(year == 2022) %>% 
  full_join(activity_df, by=c("creationDate"="dateComponents")) %>% 
  filter(year == 2022) 
  
  
```

## Plots

```{r}
calories_plot <- calories %>% 
  ggplot(aes(x = dateComponents,
             y = activeEnergyBurned )) +
  geom_col(aes(fill=calories_goal))  +
  scale_y_continuous(limits = c(0, 1500),
                     expand = c(0,0)) +
  scale_x_date(date_breaks ="1 month",
               date_minor_breaks = "1 week",
               date_labels = "%B",
               limits = c(as.Date("2022-01-01"), as.Date("2022-12-31")),
               expand = c(0, 0)
               ) +
  scale_fill_manual(values = c("#7a04eb", "#1afe49")) +
  labs(x = NULL,
       y = "Active calories") +
 # facet_grid(rows = vars(month)) +
  theme_classic() +
  theme(strip.text.y = element_text(angle = 0),
        legend.position = "none",
        legend.title = element_blank(),
        plot.background = element_rect(colour = "black",
                                       fill = "black"),
        panel.background = element_rect(colour = "black",
                                        fill = "black"),
        legend.background = element_rect(colour = "black",
                                         fill = "black"),
        axis.title = element_text(colour = "white",
                                  face = "bold"),
        axis.text = element_text(colour = "white"),
        axis.text.x = element_blank(),
        plot.margin = unit(c(1,1,1,1), units = "cm"))


wk_plot <- wk_type %>% 
  ggplot(aes(x=date(creationDate),
             y=duration)) +
  geom_point(aes(color=workoutActivityType), 
             size=1,
             alpha=0.9) +
  scale_x_date(date_breaks = "1 month", 
               date_minor_breaks = "1 week",
               date_labels = "%B",
               limits = c(as.Date("2022-01-01"), as.Date("2022-12-31")),
               expand = c(0,0)) +
  scale_color_manual(values = c("#e96d5e", "#ff9760", "#ffe69d", "#6a7e6a",
                                "#7700a6", "#defe47", "#00b3fe", "#ff184c")) +
  labs(x = NULL,
       y = "Time (min)") +
  theme_classic() +
  guides(color = guide_legend(override.aes = list(size = 2),
                              nrow = 1)) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(colour = "white"),
        plot.background = element_rect(colour = "black",
                                       fill = "black"),
        panel.background = element_rect(colour = "black",
                                        fill = "black"),
        legend.background = element_rect(colour = "black",
                                         fill = "black"),
        axis.title = element_text(colour = "white",
                                  face = "bold"),
        axis.text = element_text(colour = "white"),
        axis.text.x = element_blank())


weight_plot <- weight %>% 
  ggplot(aes(x = date(creationDate),
             y = value)) +
  geom_line(color = "#defe47") +
  #geom_hline(yintercept = 90, color = "darkgrey", linetype = "dashed") +
  scale_y_continuous(limits = c(85, 103)) +
  scale_x_date(date_breaks = "1 month",
               date_labels = "%B",
               limits = c(as.Date("2022-01-01"), as.Date("2022-12-31")),
               expand = c(0,0)) +
  labs(x = NULL,
       y = "Weight") +
  theme_classic() +
  theme(plot.background = element_rect(colour = "black",
                                       fill = "black"),
        panel.background = element_rect(colour = "black",
                                        fill = "black"),
        axis.title = element_text(colour = "white",
                                  face = "bold"),
        axis.text = element_text(colour = "white"),
        axis.text.x = element_text(size = 12),
        axis.text.y = element_blank())

plot_all <-  (wk_plot / calories_plot  / weight_plot)

final_plot <- plot_all + 
  plot_annotation(title = "A YEAR OF DATA",
                  subtitle = "I tracked my workouts, weight and active calories using
                  a smartwatch during 2022. One of my goals was to <b style='color:#1afe49'>burn 950 active calories</b> 
                  per day. However, I only<br /> achived that goal between July and August.",
                  caption = "Visualization by Johan S. Sáenz (@SaenzJohanS) • Data collected with AppleWatch") & 
  theme(plot.background = element_rect(fill = "black"),
        plot.title = element_markdown(family = "American Typewriter",
                                      colour = "white",
                                      face = "bold",
                                      size = 30,
                                      margin = margin(10, 10, 10, 10)),
        plot.subtitle = element_markdown(color = "white",
                                         lineheight = 1,),
        plot.caption = element_markdown(color = "white", 
                                        size = 7,
                                        hjust = 0.5))
```

## Saving plots

```{r}
ggsave(final_plot,file = "plot/workouts.png", width = 12, height = 7, dpi = 400)
```
